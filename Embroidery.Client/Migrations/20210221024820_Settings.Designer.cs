// <auto-generated />
using System;
using Embroidery.Client;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Embroidery.Client.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210221024820_Settings")]
    partial class Settings
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Embroidery.Client.Models.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CleanName")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("TEXT");

                    b.Property<string>("FileHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<int>("FolderId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("FontSize")
                        .HasColumnType("REAL");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(388)
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasError")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("ImageThumbnail")
                        .HasColumnType("BLOB");

                    b.Property<byte?>("Length")
                        .HasColumnType("INTEGER");

                    b.Property<char>("Letter")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<int>("SizeInKb")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.Property<byte?>("Width")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CleanName");

                    b.HasIndex("FileHash");

                    b.HasIndex("HasError");

                    b.HasIndex("FolderId", "Name")
                        .IsUnique();

                    b.ToTable("Files");
                });

            modelBuilder.Entity("Embroidery.Client.Models.Folder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Path")
                        .IsUnique();

                    b.ToTable("Folders");
                });

            modelBuilder.Entity("Embroidery.Client.Models.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(2058)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("Embroidery.Client.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("FileId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FolderId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.HasIndex("FolderId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Embroidery.Client.Models.View.GroupedFile", b =>
                {
                    b.Property<string>("CleanName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("FirstFileId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalLikeFiles")
                        .HasColumnType("INTEGER");

                    b.ToTable("GroupedFile", t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("Embroidery.Client.Models.View.SimpleFile", b =>
                {
                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("SimpleFile", t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("Embroidery.Client.Models.File", b =>
                {
                    b.HasOne("Embroidery.Client.Models.Folder", "Folder")
                        .WithMany("Files")
                        .HasForeignKey("FolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Folder");
                });

            modelBuilder.Entity("Embroidery.Client.Models.Tag", b =>
                {
                    b.HasOne("Embroidery.Client.Models.File", null)
                        .WithMany("Tags")
                        .HasForeignKey("FileId");

                    b.HasOne("Embroidery.Client.Models.Folder", null)
                        .WithMany("Tags")
                        .HasForeignKey("FolderId");
                });

            modelBuilder.Entity("Embroidery.Client.Models.File", b =>
                {
                    b.Navigation("Tags");
                });

            modelBuilder.Entity("Embroidery.Client.Models.Folder", b =>
                {
                    b.Navigation("Files");

                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
